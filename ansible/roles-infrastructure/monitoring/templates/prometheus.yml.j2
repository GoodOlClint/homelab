global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'homelab'
    environment: 'production'

# Remote write to OpenObserve
remote_write:
  - url: http://openobserve:5080/api/default/prometheus/api/v1/write
    basic_auth:
      username: {{ openobserve_root_user_email }}
      password: {{ openobserve_root_user_pass }}

scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # OpenObserve metrics
  - job_name: 'openobserve'
    static_configs:
      - targets: ['openobserve:5080']

  # Node Exporter - OpenObserve host
  - job_name: 'node-exporter-openobserve'
    static_configs:
      - targets: ['node-exporter:9100']
        labels:
          instance: 'openobserve'
          role: 'monitoring'

  # Blackbox Exporter - Endpoint monitoring
  - job_name: 'blackbox-exporter'
    static_configs:
      - targets: ['blackbox:9115']

  # DNS Monitoring - Check DNS resolution across zones
  - job_name: 'blackbox-dns'
    metrics_path: /probe
    params:
      module: [dns_udp]
    static_configs:
{% for vlan, zone in dns_zones.items() %}
      - targets:
          - '{{ zone.dns_ip }}'
        labels:
          zone: '{{ zone.zone }}'
          vlan: '{{ vlan }}'
{% endfor %}
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox:9115

  # HTTP/HTTPS Monitoring - Check web services
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
          - http://{{ hostvars['adguard'].ansible_host }}:3000  # AdGuard
          - http://{{ ansible_host }}:{{ openobserve_listen_port }}  # OpenObserve
          - http://{{ ansible_host }}:3000  # Grafana
{% if hostvars['plex'] is defined %}
          - http://{{ hostvars['plex'].ansible_host }}:32400/web  # Plex
{% endif %}
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox:9115

  # ICMP Ping Monitoring - Check host availability
  - job_name: 'blackbox-ping'
    metrics_path: /probe
    params:
      module: [icmp]
    static_configs:
      - targets:
          - {{ hostvars['dns'].ansible_host }}  # DNS
          - {{ hostvars['adguard'].ansible_host }}  # AdGuard
{% if hostvars['plex'] is defined %}
          - {{ hostvars['plex'].ansible_host }}  # Plex
{% endif %}
{% if hostvars['docker'] is defined %}
          - {{ hostvars['docker'].ansible_host }}  # Docker
{% endif %}
          - 8.8.8.8  # Google DNS
          - 1.1.1.1  # Cloudflare DNS
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox:9115

  # Speedtest Monitoring
  - job_name: 'speedtest'
    scrape_interval: 30m  # Run every 30 minutes
    scrape_timeout: 90s
    static_configs:
      - targets: ['speedtest:9798']

  # Telegraf metrics from all hosts
  - job_name: 'telegraf'
    honor_labels: true
    static_configs:
      - targets: ['{{ ansible_host }}:9273']
        labels:
          instance: 'openobserve'
          role: 'monitoring'
{% if hostvars['dns'] is defined and hostvars['dns'].ansible_host is defined %}
      - targets: ['{{ hostvars['dns'].ansible_host }}:9273']
        labels:
          instance: 'dns'
          role: 'infrastructure'
{% endif %}
{% if hostvars['adguard'] is defined and hostvars['adguard'].ansible_host is defined %}
      - targets: ['{{ hostvars['adguard'].ansible_host }}:9273']
        labels:
          instance: 'adguard'
          role: 'infrastructure'
{% endif %}
{% if hostvars['plex'] is defined and hostvars['plex'].ansible_host is defined %}
      - targets: ['{{ hostvars['plex'].ansible_host }}:9273']
        labels:
          instance: 'plex'
          role: 'services'
{% endif %}
{% if hostvars['docker'] is defined and hostvars['docker'].ansible_host is defined %}
      - targets: ['{{ hostvars['docker'].ansible_host }}:9273']
        labels:
          instance: 'docker'
          role: 'services'
{% endif %}
{% if hostvars['plex-services'] is defined and hostvars['plex-services'].ansible_host is defined %}
      - targets: ['{{ hostvars['plex-services'].ansible_host }}:9273']
        labels:
          instance: 'plex-services'
          role: 'services'
{% endif %}
{% if hostvars['nvidia-licensing'] is defined and hostvars['nvidia-licensing'].ansible_host is defined %}
      - targets: ['{{ hostvars['nvidia-licensing'].ansible_host }}:9273']
        labels:
          instance: 'nvidia-licensing'
          role: 'services'
{% endif %}
{% if hostvars['homebridge'] is defined and hostvars['homebridge'].ansible_host is defined %}
      - targets: ['{{ hostvars['homebridge'].ansible_host }}:9273']
        labels:
          instance: 'homebridge'
          role: 'services'
{% endif %}
{% if hostvars['multicast-relay'] is defined and hostvars['multicast-relay'].ansible_host is defined %}
      - targets: ['{{ hostvars['multicast-relay'].ansible_host }}:9273']
        labels:
          instance: 'multicast-relay'
          role: 'services'
{% endif %}

  # Proxmox VE Exporter - Hypervisor Metrics
  - job_name: 'proxmox'
    static_configs:
      - targets:
        - {{ proxmox_host }}  # Proxmox VE host IP
    metrics_path: /pve
    params:
      module: [default]
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: proxmox-exporter:9221

  # SNMP Exporter for Synology NAS
  - job_name: 'synology'
    scrape_interval: 30s
    static_configs:
      - targets:
          - {{ synology_host }}
        labels:
          instance: 'synology-nas'
          role: 'storage'
    metrics_path: /snmp
    params:
      module: [synology]
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: snmp-exporter:9116

  # UniFi Poller - Network Infrastructure
  - job_name: 'unifi-poller'
    static_configs:
      - targets: ['unifi-poller:9130']
        labels:
          instance: 'unifi'
          role: 'network'

  # Proxmox Backup Server Exporter
  - job_name: 'pbs-exporter'
    scrape_interval: 60s  # PBS metrics don't change frequently
    scrape_timeout: 30s
    static_configs:
      - targets: ['pbs-exporter:10019']
        labels:
          instance: 'proxmox-backup'
          role: 'infrastructure'


