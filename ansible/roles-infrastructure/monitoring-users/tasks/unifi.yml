---
# UniFi Controller monitoring user provisioning tasks

- name: Check UniFi Controller API connectivity
  ansible.builtin.uri:
    url: "{{ unifi_controller_url }}/api/login"
    method: POST
    body_format: json
    body:
      username: "{{ unifi_admin_user | default(unifi_user) }}"
      password: "{{ unifi_admin_password | default(unifi_password) }}"
    validate_certs: false
    timeout: 10
    status_code: [200]
  register: unifi_login
  retries: 3
  delay: 5
  until: unifi_login.status == 200
  no_log: true

- name: Get existing UniFi admins
  ansible.builtin.uri:
    url: "{{ unifi_controller_url }}/api/s/{{ unifi_site | default('default') }}/cmd/sitemgr"
    method: POST
    body_format: json
    body:
      cmd: "get-admins"
    validate_certs: false
    headers:
      Cookie: "{{ unifi_login.cookies_string }}"
    status_code: [200]
  register: unifi_admins

- name: Check if monitoring user exists
  ansible.builtin.set_fact:
    unifi_monitoring_exists: "{{ unifi_admins.json.data | selectattr('name', 'equalto', unifi_monitoring_user) | list | length > 0 }}"

- name: Create UniFi monitoring user
  ansible.builtin.uri:
    url: "{{ unifi_controller_url }}/api/s/{{ unifi_site | default('default') }}/cmd/sitemgr"
    method: POST
    body_format: json
    body:
      cmd: "create-admin"
      name: "{{ unifi_monitoring_user }}"
      email: "{{ unifi_monitoring_email | default('monitoring@localhost') }}"
      x_password: "{{ unifi_monitoring_password | default(unifi_password) }}"
      role: "{{ unifi_monitoring_role }}"
      requires_new_password: false
    validate_certs: false
    headers:
      Cookie: "{{ unifi_login.cookies_string }}"
    status_code: [200]
  when: not unifi_monitoring_exists
  no_log: true
  register: unifi_user_created

- name: Update UniFi monitoring user password (if exists)
  ansible.builtin.uri:
    url: "{{ unifi_controller_url }}/api/s/{{ unifi_site | default('default') }}/cmd/sitemgr"
    method: POST
    body_format: json
    body:
      cmd: "set-admin"
      admin: "{{ unifi_monitoring_user }}"
      x_password: "{{ unifi_monitoring_password | default(unifi_password) }}"
    validate_certs: false
    headers:
      Cookie: "{{ unifi_login.cookies_string }}"
    status_code: [200]
  when: unifi_monitoring_exists
  no_log: true

- name: Logout from UniFi Controller
  ansible.builtin.uri:
    url: "{{ unifi_controller_url }}/api/logout"
    method: POST
    validate_certs: false
    headers:
      Cookie: "{{ unifi_login.cookies_string }}"
    status_code: [200]
  changed_when: false

- name: Display UniFi user creation result
  ansible.builtin.debug:
    msg: "UniFi monitoring user '{{ unifi_monitoring_user }}' configured with '{{ unifi_monitoring_role }}' role"
