services:
  # PostgreSQL - Database for application data
  postgres:
    container_name: postgres
    image: postgres:17
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD={{ postgres_password | default('3000') }}
      - POSTGRES_USER={{ postgres_user | default('3000') }}
      - POSTGRES_DB={{ postgres_default_db | default('3000')}}
      - TZ={{ timezone }}
    volumes:
      - postgres:/var/lib/postgresql/data:rw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{ postgres_user }}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Portainer - Docker container management
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:alpine
    restart: unless-stopped
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - TZ={{ timezone }}
    healthcheck:
      test: ["CMD", "wget", "--no-check-certificate", "--no-verbose", "--tries=3", "--spider", "--header='Content-Type:application/json'", "http://localhost:9000/api/system/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Sonarr - TV series management
  sonarr:
    container_name: sonarr
    image: ghcr.io/hotio/sonarr:latest
    restart: unless-stopped
    logging:
      driver: json-file
    ports:
      - 8989:8989
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - PUID={{ plex_services['sonarr'].PUID }}
      - PGID={{ plex_services['sonarr'].PGID }}
      - UMASK=002
      - TZ={{ timezone }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/sonarr:/config:rw
      - plex_data:/data:rw
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8989/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Radarr - Movie management
  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr:latest
    restart: unless-stopped
    logging:
      driver: json-file
    ports:
      - 7878:7878
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - PUID={{ plex_services['radarr'].PUID }}
      - PGID={{ plex_services['radarr'].PGID }}
      - UMASK=002
      - TZ={{ timezone }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/radarr:/config:rw
      - plex_data:/data:rw
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7878/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Tautulli - Plex usage statistics
  tautulli:
    container_name: tautulli
    image: ghcr.io/hotio/tautulli:latest
    restart: unless-stopped
    logging:
      driver: json-file
    ports:
      - 8181:8181
    environment:
      - PUID={{ plex_services['tautulli'].PUID }}
      - PGID={{ plex_services['tautulli'].PGID }}
      - UMASK=002
      - TZ={{ timezone }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/tautulli:/config:rw
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8181/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Jellyseerr - Request management for Plex
  jellyseerr:
    container_name: jellyseerr
    image: fallenbagel/jellyseerr:latest
    restart: unless-stopped
    ports:
      - 5055:5055
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - PUID={{ plex_services['jellyseerr'].PUID }}
      - PGID={{ plex_services['jellyseerr'].PGID }}
      - UMASK=002
      - TZ={{ timezone }}
      - DB_TYPE=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=jellyseerr
      - DB_USER={{ plex_services['jellyseerr'].db_user }}
      - DB_PASS={{ plex_services['jellyseerr'].db_password }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/jellyseerr:/app/config:rw
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5055/api/v1/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Prowlarr - Indexer management
  prowlarr:
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr:latest
    restart: unless-stopped
    logging:
      driver: json-file
    ports:
      - "9696:9696"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - PUID={{ plex_services['prowlarr'].PUID }}
      - PGID={{ plex_services['prowlarr'].PGID }}
      - UMASK=002
      - TZ={{ timezone }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/prowlarr:/config:rw
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9696/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Bazarr - Subtitle management
  bazarr:
    container_name: bazarr
    image: ghcr.io/hotio/bazarr:latest
    restart: unless-stopped
    logging:
      driver: json-file
    ports:
      - 6767:6767
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - PUID={{ plex_services['bazarr'].PUID }}
      - PGID={{ plex_services['bazarr'].PGID }}
      - UMASK=002
      - TZ={{ timezone }}
      - POSTGRES_ENABLED=true
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=bazarr
      - POSTGRES_USERNAME={{ plex_services['bazarr'].db_user }}
      - POSTGRES_PASSWORD={{ plex_services['bazarr'].db_password }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/bazarr:/config:rw
      - plex_data:/data:rw
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6767/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Lidarr - Music management
  lidarr:
    container_name: lidarr
    image: ghcr.io/hotio/lidarr:latest
    restart: unless-stopped
    logging:
      driver: json-file
    ports:
      - 8686:8686
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - PUID={{ plex_services['lidarr'].PUID }}
      - PGID={{ plex_services['lidarr'].PGID }}
      - UMASK=002
      - TZ={{ timezone }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/lidarr:/config:rw
      - plex_data:/data:rw
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8686/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Readarr - Ebook management
  readarr:
    container_name: readarr
    image: ghcr.io/hotio/readarr:latest
    restart: unless-stopped
    logging:
      driver: json-file
    ports:
      - 8787:8787
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - PUID={{ plex_services['readarr'].PUID }}
      - PGID={{ plex_services['readarr'].PGID }}
      - UMASK=002
      - TZ={{ timezone }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/readarr:/config:rw
      - plex_data:/data:rw
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8787/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # SABnzbd - Usenet downloader
  sabnzbd:
    container_name: sabnzbd
    image: ghcr.io/hotio/sabnzbd:latest
    restart: unless-stopped
    logging:
      driver: json-file
    ports:
      - 8080:8080
    environment:
      - PUID={{ plex_services['sabnzbd'].PUID }}
      - PGID={{ plex_services['sabnzbd'].PGID }}
      - UMASK=002
      - TZ={{ timezone }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/sabnzbd:/config:rw
      - plex_data:/data:rw
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api?mode=version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Cloudflared - Cloudflare Tunnel
  cloudflared:
    container_name: cloudflared
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    command: tunnel run
    environment:
      - TUNNEL_TOKEN={{ cloudflared_tunnel_token }}
    healthcheck:
      test: ["CMD", "cloudflared", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Recyclarr - Sync *arr indexers and quality profiles
  recyclarr:
    container_name: recyclarr
    image: ghcr.io/recyclarr/recyclarr:latest
    restart: unless-stopped
    logging:
      driver: json-file
    environment:
      - PUID={{ plex_services['recyclarr'].PUID | default(1000) }}
      - PGID={{ plex_services['recyclarr'].PGID | default(1000) }}
      - TZ={{ timezone }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/recyclarr:/config:rw
    depends_on:
      - sonarr
      - radarr
    healthcheck:
      test: ["CMD", "recyclarr", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  plex_data:
    driver: local
    driver_opts:
      type: nfs
      o: "addr={{ plex_nfs_src.split(':')[0] }},{{ nfs_mount_options }}"
      device: "{{ plex_nfs_src }}/data"
  postgres:
  portainer: